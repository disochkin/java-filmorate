USE PUBLIC;

CREATE TABLE IF NOT EXISTS MPA (
	ID INTEGER PRIMARY KEY,
	NAME CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT MPA_ID_UNIQUE UNIQUE (ID),
	CONSTRAINT MPA_NAME_UNIQUE UNIQUE (NAME)
);

CREATE TABLE IF NOT EXISTS FILM (
	ID SERIAL PRIMARY KEY,
	NAME CHARACTER VARYING(100) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200),
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	MPA_ID INTEGER,
	FOREIGN KEY (MPA_ID) REFERENCES MPA(ID));

CREATE TABLE IF NOT EXISTS GENRES (
	ID INTEGER PRIMARY KEY,
	NAME CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT ID_UNIQUE UNIQUE (ID),
	CONSTRAINT GENRES_UNIQUE UNIQUE (NAME));

CREATE TABLE IF NOT EXISTS FILM_GENRE (
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	FOREIGN KEY (GENRE_ID) REFERENCES GENRES(ID),
	FOREIGN KEY (FILM_ID) REFERENCES FILM(ID),
	CONSTRAINT unique_film_genre UNIQUE(FILM_ID, GENRE_ID));

CREATE TABLE IF NOT EXISTS USERS (
	ID SERIAL PRIMARY KEY,
	EMAIL CHARACTER VARYING(50) NOT NULL,
	LOGIN CHARACTER VARYING(50) NOT NULL,
	NAME CHARACTER VARYING(50) NOT NULL,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT unique_email_user UNIQUE(email),
	CONSTRAINT unique_login_user UNIQUE(login));

CREATE TABLE IF NOT EXISTS LIKES (
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	FOREIGN KEY (FILM_ID) REFERENCES FILM(ID),
	FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
	CONSTRAINT unique_film_user UNIQUE(FILM_ID, USER_ID));

CREATE TABLE IF NOT EXISTS FRIENDSHIP (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER NOT NULL,
	FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
	FOREIGN KEY (FRIEND_ID) REFERENCES USERS(ID),
	CONSTRAINT unique_user_friend UNIQUE(USER_ID, FRIEND_ID));